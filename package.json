{
	"name": "uphold-challenge",
	"version": "0.1.0",
	"private": true,
	"dependencies": {
		"@reduxjs/toolkit": "^1.9.7",
		"@testing-library/user-event": "^13.5.0",
		"@types/jest": "^29.5.10",
		"@types/node": "^20.10.1",
		"@types/react": "^18.2.39",
		"@types/react-dom": "^18.2.17",
		"@uphold/uphold-sdk-javascript": "^2.4.0",
		"cross-env": "^7.0.3",
		"react": "^18.2.0",
		"react-dom": "^18.2.0",
		"react-redux": "^8.1.3",
		"react-scripts": "5.0.1",
		"typescript": "*",
		"web-vitals": "^2.1.4"
	},
	"jest": {
		"coveragePathIgnorePatterns": [
			"<rootDir>/src/index.js",
			"<rootDir>/src/reportWebVitals.js",
			"<rootDir>/src/components/icons/",
			"<rootDir>/src/slices/",
			"<rootDir>/src/mocks/"
		]
	},
	"scripts": {
		"start": "react-scripts start",
		"start:headless": "cross-env BROWSER=none react-scripts start",
		"build": "react-scripts build",
		"test:watch": "react-scripts test",
		"test": "react-scripts test --watchAll=false",
		"eject": "react-scripts eject",
		"e2e": "cypress run",
		"lint": "eslint . --fix --max-warnings=0",
		"format": "prettier . --write",
		"prepare": "husky install"
	},
	"eslintConfig": {
		"extends": [
			"react-app",
			"react-app/jest"
		]
	},
	"browserslist": {
		"production": [
			">0.2%",
			"not dead",
			"not op_mini all"
		],
		"development": [
			"last 1 chrome version",
			"last 1 firefox version",
			"last 1 safari version"
		]
	},
	"devDependencies": {
		"@testing-library/jest-dom": "4.2.4",
		"@testing-library/react": "^14.1.2",
		"@typescript-eslint/eslint-plugin": "^6.4.0",
		"cypress": "^13.6.0",
		"eslint": "^8.0.1",
		"eslint-config-prettier": "^9.1.0",
		"eslint-config-standard-with-typescript": "^40.0.0",
		"eslint-plugin-import": "^2.25.2",
		"eslint-plugin-n": "^15.0.0 || ^16.0.0 ",
		"eslint-plugin-promise": "^6.0.0",
		"eslint-plugin-react": "^7.33.2",
		"http-proxy-middleware": "^2.0.6",
		"husky": "^8.0.3",
		"lint-staged": "^15.2.0",
		"prettier": "^3.1.0",
		"tailwind-scrollbar": "^3.0.5",
		"tailwindcss": "^3.3.5"
	},
	"lint-staged": {
		"*.js": "eslint --cache --fix",
		"*.--write": "prettier --write"
	}
}
